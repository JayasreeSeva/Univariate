# -*- coding: utf-8 -*-
"""Univariate.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1H5AmP-QQ3bUhy3nQqWzS8GUVdsLG_Fog
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

a=pd.read_csv('/content/Company_data.csv')
a.head()

a.shape

a.describe()

a.isnull().sum()

"""Here the company dataset has no null values."""

b=a.corr()
sns.heatmap(b,annot=True)

"""here TV has the highest postive correlation i.e 0.9 so it is taken as x value"""

y=a.iloc[:,-1]
print(y)

X=a.iloc[:,:1]
print(X)

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=0)

X_train.shape,X_test.shape

X_train=X_train.values.reshape(-1,1)
y_train=y_train.values.reshape(-1,1)

X_train.shape,y_train.shape

X_test.shape,y_test.shape

from sklearn import linear_model
reg = linear_model.LinearRegression()
reg.fit(X_train, y_train)

from sklearn.metrics import mean_absolute_error,r2_score,mean_squared_error
y_pred=reg.predict(X_train)

print(f'MAE={mean_absolute_error(y_train,y_pred)}')
print(f'MSE={mean_squared_error(y_train,y_pred)}')
print(f'RMSE={np.sqrt(mean_squared_error(y_train,y_pred))}')
print(f'R_2={r2_score(y_train,y_pred)}')

y_pred=reg.predict(X_test)

print(f'MAE={mean_absolute_error(y_test,y_pred)}')
print(f'MSE={mean_squared_error(y_test,y_pred)}')
print(f'RMSE={np.sqrt(mean_squared_error(y_test,y_pred))}')
print(f'R_2={r2_score(y_test,y_pred)}')

from sklearn.linear_model import Lasso
reg=Lasso(alpha=0.1)
reg.fit(X_train,y_train)

y_pred=reg.predict(X_train)

print(f'MAE={mean_absolute_error(y_train,y_pred)}')
print(f'MSE={mean_squared_error(y_train,y_pred)}')
print(f'RMSE={np.sqrt(mean_squared_error(y_train,y_pred))}')
print(f'R_2={r2_score(y_train,y_pred)}')

y_pred1=reg.predict(X_test)

print(f'MAE={mean_absolute_error(y_test,y_pred1)}')
print(f'MSE={mean_squared_error(y_test,y_pred1)}')
print(f'RMSE={np.sqrt(mean_squared_error(y_test,y_pred1))}')
print(f'R_2={r2_score(y_test,y_pred1)}')

from sklearn.linear_model  import Ridge
reg=Ridge(alpha=0.1)
reg.fit(X_train,y_train)

y_pred=reg.predict(X_train)

print(f'MAE={mean_absolute_error(y_train,y_pred)}')
print(f'MSE={mean_squared_error(y_train,y_pred)}')
print(f'RMSE={np.sqrt(mean_squared_error(y_train,y_pred))}')
print(f'R_2={r2_score(y_train,y_pred)}')

y_pred1=reg.predict(X_test)

print(f'MAE={mean_absolute_error(y_test,y_pred1)}')
print(f'MSE={mean_squared_error(y_test,y_pred1)}')
print(f'RMSE={np.sqrt(mean_squared_error(y_test,y_pred1))}')
print(f'R_2={r2_score(y_test,y_pred1)}')

"""By  increasing the alfa value in both lasso & ridge we are able to see changes in the values of MAE,MSE,RMSE i.e increase in their values.But the R2 score is decreasing"""

reg.score(X_test,y_test)